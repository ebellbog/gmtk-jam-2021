@font-family: 'Press Start 2P', cursive;

@red: red;
@orange: orange;
@yellow: yellow;
@green: limegreen;
@blue: #0a72ff;
@purple: #ba00ff;

@btnColor: magenta;

body {
    margin: 0;
    padding: 0;
    min-width: 1300px;

    background-color: black;

    font-family: 'Press Start 2P';

    display: flex;
    justify-content: center;
    align-items: center;

    #game {
        flex-grow: 0;
    }
    #left-sidebar, #right-sidebar {
        flex-basis: 25%;
    }

    &.playing {
        .circle {
            cursor: pointer;
        }
    }
}

#left-sidebar {
    color: white;
    padding: 30px;

    #summary, #level-info {
        overflow: hidden;
    }
    #summary {
        max-height: 150;
    }
    #level-info {
        margin-top: 16px;
        max-height: 0;

        &.highlight {
            .header, .description li, #level {
                animation: slide 2s ease;
                animation-fill-mode: forwards;
            }
        }
    }

    hr {
        height: 1px;
        background-color: white;
    }

    #level {
        width: 100%;
        padding: 5px 0 3px 0;

        text-align: center;
        text-transform: uppercase;
        font-size: 24px;
    }

    .description {
        line-height: 24px;
        letter-spacing: 1px;
        hyphens: auto;
        font-size: 13px;

        li {
            margin-left: -18px;
            margin-bottom: 8px;
        }
    }

    .header {
        font-size: 18px;
        margin: 30px 0;
    }

    .btn {
        cursor: pointer;
        display: block;

        margin-top: 20px;
        &:first-of-type {
            margin-top: 30px;
        }

        &:hover {
            text-shadow: 2px 2px @btnColor;
        }
    }
}

#title {
    margin: 0 auto;
    width: 310px;

    line-height: 60px;
    white-space: nowrap;

    margin-bottom: 25px;

    font-size: 44px;
    color: white;

    .text {
        padding: 0;
        margin-right: -42px;
    }
}

#flag {
    text-align: center;
    margin-left: auto;
    margin-right: auto;
    width: 230px;

    .stripe {
        position: relative;
        height: 32px;
        line-height: 34px;
        width: 100%;

        font-size: 14px;

        margin-bottom: 7px;
        transition: margin-bottom .4s;
        &.connected {
            margin-bottom: 0;
        }

        .score {
            color: white;
            text-shadow: 2px 2px 0 black;
        }
        .multiplier {
            position: absolute;
            right: 20px;
            top: 50%;
            transform: translateY(-50%);
        }

        &:first-of-type {
            border-top-left-radius: 4px;
            border-top-right-radius: 4px;
        }
        &:last-of-type {
            border-bottom-left-radius: 4px;
            border-bottom-right-radius: 4px;
        }
    }

    &::after {
        content: attr(data-total-score);
        color: white;
        font-size: 14px;
        line-height: 40px;
    }
}

.color-class(@color) {
    fill: @color;
    fill-opacity: 25%;

    stroke: @color;
    color: @color;
    background-color: @color;

    &.outline {
        background-color: fade(@color, 25%);
        box-shadow: inset 0 0 0 2px @color;
    }
    &.connecting, &.connected {
        fill-opacity: 100%;
    }
    &.text {
        background-color: transparent;
    }
    .multiplier {
        color: darken(@color, 20%);
    }

    &.shimmer {
        animation: shimmer 0.5s 2 alternate;
    }
    @keyframes shimmer {
        0% {
            fill-opacity: 25%;
        }
        100% {
            fill-opacity: 100%;
        }
    }
}
.red {
    .color-class(@red);
}
.orange {
    .color-class(@orange);
}
.yellow {
    .color-class(@yellow);
}
.green {
    .color-class(@green);
}
.blue {
    .color-class(@blue);
}
.purple {
    .color-class(@purple);
}

#game-wrapper {
    border-radius: 16px;
    border: 4px solid white;
}

#game {
    width: 800px;
    height: 600px;

    .circle {
        stroke-width: 3px;
    }

    line {
        stroke-width: 7;
        stroke-linecap: round;
        pointer-events: none;

        &.dragging {
            stroke-width: 5;

            &.connecting {
                stroke-width: 10;
            }
        }
        &.illegal {
            stroke-linecap: unset;
            stroke-dasharray: 8 10;
        }
    }
}

#footer {
    width: 100%;
    margin-top: 25px;
    min-height: 100px;

    text-align: center;

    #start-btn {
        display: inline-block;
        margin-top: 30px;
        color: white;
        cursor: pointer;

        animation: pulse .85s linear infinite alternate-reverse;
        &:hover {
            animation: none;
            font-size: 38px;
            letter-spacing: 5px;
            text-shadow: 3px 2px @btnColor;
        }
    }
}
.text-success {
    color: white;
    animation: pop 1.25s;
    animation-fill-mode: forwards;
}
.text-failure {
    color: @red;
    font-size: 38px;
    animation: sink 2s;
    animation-fill-mode: forwards;
}

@keyframes pop {
    0% {
        opacity: 0;
        font-size: 16px;
    }
    20% {
        font-size: 44px;
    }
    40% {
        opacity: 1;
        font-size: 38px;
    }
    65% {
        opacity: 1;
        font-size: 38px;
    }
    100% {
        opacity: 0;
        font-size: 32px;
    }
}

@keyframes sink {
    0% {
        opacity: 0;
        transform: translateY(-50%);
    }
    50% {
        opacity: 1;
    }
    100% {
        opacity: 0;
        transform: translateY(120%);
    }
}

@keyframes pulse {
    0% {
        opacity: .4;
        font-size: 37px;
        letter-spacing: 3px;
    }
    100% {
        opacity: 1;
        font-size: 38px;
        letter-spacing: 5px;
    }
}

@keyframes blink {
    0% {
        color: white;
        border-color: white;
    }
    50% {
        color: white;
        border-color: white;
    }
    51% {
        color: magenta;
        border-color: magenta;
    }
    100% {
        color: magenta;
        border-color: magenta;
    }
}

@keyframes slide {
    0% {
        transform: translateX(0%);
    }
    45% {
        transform: translateX(-100%);
    }
    55% {
        transform: translateX(-100%);
    }
    56% {
        transform: translateX(100%);
    }
    100% {
        transform: translateX(0);
    }
}
